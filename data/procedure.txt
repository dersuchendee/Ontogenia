Define an ontology using an overall procedure based on understanding each competency question using this procedure: 1. Competency question understanding. 2. Preliminary identification of the context. 3. Divide the competency question in subject, predicate, object and predicate nominative. Assign each subject and object to a class, each predicate to an object property where the domain is the subject and the range is the object. If a predicate already exists, you can expand it by adding the new relevant classes, if they are not present, in the domain and the range. Each predicate nominative becomes a datatype property, referred to the subject or object.  4. If you can answer yes to the question is A an element of B?, then A is a rdfs:subClassOf B. If not sure, try to reassess. 5. Starting from your knowledge, extend the ontology with these restrictions: if in your experience a class has a property that is true for all instances of another class, then you can add an owl:allValuesFrom restriction; if a class has a property that has a value, then you can add an owl:hasValue restriction; if a class has a property that is true for some instances of another class, then you can add an owl:someValuesFrom restriction. If a class has a property that can be defined, you can have an owl:Restriction minCardinality with zero; if a class has a property that must be defined, you can have an owl:Restriction minCardinality with one. 6. Starting from your knowledge, if all individuals of class A are individuals in the class B, and vice versa, then you can add an owl:equivalentClass; if all individuals of the class A are not in the class B, then A is disjoint to B so you can add an owl:disjointClass. 7. Now add all restrictions and cardinality and equivalent and disjoint classes for this context in the owl ontology. 8. Confirm the final answer and explain the reasoning. 9. Make a confidence evaluation and explanation using the ontology reasoning and test it on some instances.
